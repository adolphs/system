<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wyait.manage.dao.ConstructionDictionaryDAO">
  <resultMap id="BaseResultMap" type="com.wyait.manage.pojo.ConstructionDictionary">
    <id column="construction_dictionary_id" jdbcType="VARCHAR" property="constructionDictionaryId" />
    <result column="pid" jdbcType="VARCHAR" property="pid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="value" jdbcType="VARCHAR" property="value" />
  </resultMap>
  <sql id="Base_Column_List">
    construction_dictionary_id, pid, `name`, `level`
  </sql>

  <select id="getConstructionDictionaryList" resultType="com.wyait.manage.pojo.ConstructionDictionary">
    select * from construction_dictionary
    where 1 = 1
    <if test="constructionDictionary.pid != null and constructionDictionary.pid != ''">
      and pid = #{constructionDictionary.pid}
    </if>
    <if test="constructionDictionary.name != null and constructionDictionary.name != ''">
      and name like CONCAT(CONCAT('%',#{constructionDictionary.name}),'%')
    </if>
  </select>
<!--  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">-->
<!--    select -->
<!--    <include refid="Base_Column_List" />-->
<!--    from construction_dictionary-->
<!--    where construction_dictionary_id = #{constructionDictionaryId,jdbcType=VARCHAR}-->
<!--  </select>-->
  <delete id="delete" parameterType="java.lang.String">
    delete from construction_dictionary
    where construction_dictionary_id = #{constructionDictionaryId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.wyait.manage.pojo.ConstructionDictionary">
    insert into construction_dictionary (construction_dictionary_id, pid, `name`,
      `level`,`value`)
    values (#{constructionDictionaryId,jdbcType=VARCHAR}, #{pid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{level,jdbcType=INTEGER},#{value,jdbcType=VARCHAR})
  </insert>
<!--  <insert id="insertSelective" parameterType="com.yjs.api.entity.ConstructionDictionary">-->
<!--    insert into construction_dictionary-->
<!--    <trim prefix="(" suffix=")" suffixOverrides=",">-->
<!--      <if test="constructionDictionaryId != null">-->
<!--        construction_dictionary_id,-->
<!--      </if>-->
<!--      <if test="pid != null">-->
<!--        pid,-->
<!--      </if>-->
<!--      <if test="name != null">-->
<!--        `name`,-->
<!--      </if>-->
<!--      <if test="level != null">-->
<!--        `level`,-->
<!--      </if>-->
<!--    </trim>-->
<!--    <trim prefix="values (" suffix=")" suffixOverrides=",">-->
<!--      <if test="constructionDictionaryId != null">-->
<!--        #{constructionDictionaryId,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="pid != null">-->
<!--        #{pid,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="name != null">-->
<!--        #{name,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="level != null">-->
<!--        #{level,jdbcType=INTEGER},-->
<!--      </if>-->
<!--    </trim>-->
<!--  </insert>-->
<!--  <update id="updateByPrimaryKeySelective" parameterType="com.yjs.api.entity.ConstructionDictionary">-->
<!--    update construction_dictionary-->
<!--    <set>-->
<!--      <if test="pid != null">-->
<!--        pid = #{pid,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="name != null">-->
<!--        `name` = #{name,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="level != null">-->
<!--        `level` = #{level,jdbcType=INTEGER},-->
<!--      </if>-->
<!--    </set>-->
<!--    where construction_dictionary_id = #{constructionDictionaryId,jdbcType=VARCHAR}-->
<!--  </update>-->
  <update id="update" parameterType="com.wyait.manage.pojo.ConstructionDictionary">
    update construction_dictionary
    set pid = #{pid,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      `level` = #{level,jdbcType=INTEGER},
      `value` = #{value,jdbcType=VARCHAR}
    where construction_dictionary_id = #{constructionDictionaryId,jdbcType=VARCHAR}
  </update>
</mapper>